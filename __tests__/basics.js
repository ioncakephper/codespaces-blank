const _ = require("lodash")
const fs = require('fs')

const { loadConfigurationFile } = require("../lib")
const { hasUncaughtExceptionCaptureCallback } = require("process")

describe('Basic functions', () => {

    describe('buildSidebar', () => {

        test.todo('Sidebar contains no items')
        test.todo('Sidebar is defined as a string')
        test.todo('Sidebar is defined as an object with pages in an array')
        test.todo('Sidebar is defined an longhand object with label and next without label')
        test.todo('Sidebar definition contains autogenerated')
    })

    describe('loadOutlineSidebars', () => {

        test.todo('No sidebars property')
    })

    describe('loadConfigurationFile', () => {
        test.todo('Empty file')
        test.todo('Defines an array')

        test.todo('Throws exception when configuration file is defined as an array')


        test('Configuration file contains the files property; its value is an array of strings', () => {
            let configurationFilename = "./__tests__/validConfiguration.json";
            let c = loadConfigurationFile(configurationFilename);
            expect(Object.keys(c).includes("files")).toBe(true)
            let {files} = c;
            expect(_.isArray(files)).toBe(true);
            expect(files.every(item => _.isString(item))).toBe(true)
        })
    })

    describe('loadOutlineSidebars', () => {

        test('', () => {})
    })

    describe('loadOutlineSidebars', () => {

        test('', () => {})
    })

    describe('loadOutlineSidebars', () => {

        test('', () => {})
    })
})